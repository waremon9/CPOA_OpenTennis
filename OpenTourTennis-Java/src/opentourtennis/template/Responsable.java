/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opentourtennis.template;

import ConnexionBD.DbPlanningDAO;
import ConnexionBD.MonMariaDbDataSource;
import Entities.Enum.Jour;
import Entities.Matchs.Planning;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author p1805285
 */
public class Responsable extends javax.swing.JFrame {

    private MonMariaDbDataSource MMDDS;
    private Connection c;
    private DbPlanningDAO BDP;
    private String NomBase;
    /**
     * Creates new form NewJFrame
     */
    public Responsable() {
        try {
            int row = 0;
            initComponents();
            MMDDS = MonMariaDbDataSource.getMdbDataSource();
            c = MMDDS.getConnection();
            BDP = new DbPlanningDAO(c);
            
            for(Planning p : DbPlanningDAO.lesPlannings){
                TableEvenement.setValueAt(p.getNom(), row, 0);
                TableEvenement.setValueAt(p.getDateDeb(), row, 1);
                TableEvenement.setValueAt(p.getDuree(), row, 2);
                TableEvenement.setValueAt(p.getNbJoueur(), row, 3);
                TableEvenement.setValueAt(p.isSimple(), row, 4);
                TableEvenement.setValueAt(p.isDouble(), row, 5);
                TableEvenement.setValueAt(p.isEffectue(), row, 6);
                row++;
            }
            
            Jour[] jour = Jour.values();
            for(Jour j : jour){
                ComboJour.addItem(j.toString());
            }
            NomBase = this.getNomEv().getText();
        } catch (SQLException ex) {
            Logger.getLogger(Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableEvenement = new javax.swing.JTable();
        nomEv = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        creer = new javax.swing.JButton();
        modif = new javax.swing.JButton();
        ComboJour = new javax.swing.JComboBox<>();
        Calendrier = new com.toedter.calendar.JCalendar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        TableEvenement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nom", "Date Début", "Durée", "Nb. joueurs", "Simple", "Double", "Effectué"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableEvenement.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableEvenement.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TableEvenement);
        if (TableEvenement.getColumnModel().getColumnCount() > 0) {
            TableEvenement.getColumnModel().getColumn(0).setResizable(false);
            TableEvenement.getColumnModel().getColumn(0).setPreferredWidth(40);
            TableEvenement.getColumnModel().getColumn(1).setResizable(false);
            TableEvenement.getColumnModel().getColumn(2).setResizable(false);
            TableEvenement.getColumnModel().getColumn(2).setPreferredWidth(25);
            TableEvenement.getColumnModel().getColumn(3).setResizable(false);
            TableEvenement.getColumnModel().getColumn(3).setPreferredWidth(25);
            TableEvenement.getColumnModel().getColumn(4).setResizable(false);
            TableEvenement.getColumnModel().getColumn(4).setPreferredWidth(20);
            TableEvenement.getColumnModel().getColumn(5).setResizable(false);
            TableEvenement.getColumnModel().getColumn(5).setPreferredWidth(20);
            TableEvenement.getColumnModel().getColumn(6).setResizable(false);
            TableEvenement.getColumnModel().getColumn(6).setPreferredWidth(20);
        }

        jLabel1.setText("Nom de l'événement");

        jLabel2.setText("Durée(jour)");

        jLabel3.setText("Date de Debut de l'événement");

        creer.setText("Créer");
        creer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerActionPerformed(evt);
            }
        });

        modif.setText("Modifier");
        modif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifActionPerformed(evt);
            }
        });

        Calendrier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Calendrier, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboJour, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nomEv, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(creer)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(modif)
                .addGap(294, 294, 294))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomEv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboJour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(creer))
                    .addComponent(Calendrier, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modif)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void creerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerActionPerformed
        try {
            
            String[] date = Calendrier.getDate().toString().split(" ");
            String jour = date[2];
            
            String semaine = date[0];
            switch(semaine){
                case "Mon":
                    semaine = "Lundi";
                    break;
                case "Tue":
                    semaine = "Mardi";
                    break;
                case "Wed":
                    semaine = "Mercredi";
                    break;
                case "Thu":
                    semaine = "Jeudi";
                    break;
                case "Fri":
                    semaine = "Vendredi";
                    break;
                case "Sat":
                    semaine = "Samedi";
                    break;
                case "Sun":
                    semaine = "Dimache";
                    break;
                    
            }
            
            String mois = date[1];
            switch(mois){
                case "Jan":
                    mois = "Janvier";
                    break;
                case "Feb":
                    mois = "Fevrier";
                    break;
                case "Mar":
                    mois = "Mars";
                    break;
                case "Apr":
                    mois = "Avril";
                    break;
                case "May":
                    mois = "Mai";
                    break;
                case "Jun":
                    mois = "Juin";
                    break;
                case "Jul":
                    mois = "Juillet";
                    break;
                case "Aug":
                    mois = "Aout";
                    break;
                case "Sep":
                    mois = "Septembre";
                    break;
                case "Oct":
                    mois = "Octobre";
                    break;
                case "Nov":
                    mois = "Novembre";
                    break;
                case "Dec":
                    mois = "Decembre";
                    break;
            }
            
            String annee = date[5];
            String[] argS = {semaine,jour,mois,annee,this.getNomEv().getText()};
            ArrayList<Object> args = new ArrayList();
            args.add(c);
            for(String s : argS){
                args.add(s);
            }
            args.add(ComboJour.getSelectedItem().toString());
            if(this.getNomEv().getText().equals(NomBase)){
                JOptionPane.showMessageDialog(null, "Il faut donner un nom au tournoi !", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                this.dispose();
                
                FoncResponsable.main(args);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_creerActionPerformed

    private void modifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifActionPerformed
        if(TableEvenement.getSelectedRowCount()==1){
            ArrayList<Object> args = new ArrayList();
            int row = TableEvenement.getSelectedRow();
            if(TableEvenement.getValueAt(row, 0)!=null){
                args.add(c);
                String[] argS = ((String) TableEvenement.getValueAt(row,1)).split(" ");
                for(String s : argS){
                    args.add(s);
                }
                args.add(TableEvenement.getValueAt(row,0));
                args.add("j"+TableEvenement.getValueAt(row,2));
                args.add(row+1);
                try {
                    FoncResponsable.main(args);
                } catch (SQLException ex) {
                    Logger.getLogger(Responsable.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_modifActionPerformed

    public JTextField getNomEv(){
        return nomEv;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Responsable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar Calendrier;
    private javax.swing.JComboBox<String> ComboJour;
    private javax.swing.JTable TableEvenement;
    private javax.swing.JButton creer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modif;
    private javax.swing.JTextField nomEv;
    // End of variables declaration//GEN-END:variables
}
